/**
 * generated by Xtext 2.26.0-SNAPSHOT
 */
package org.xtext.example.mydsl4test.otherDsl.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.xtext.example.mydsl3test.myDslTest.MyDslTestPackage;

import org.xtext.example.mydsl3test.myDslTest.impl.MyDslTestPackageImpl;

import org.xtext.example.mydsl4test.otherDsl.OtherDslFactory;
import org.xtext.example.mydsl4test.otherDsl.OtherDslPackage;
import org.xtext.example.mydsl4test.otherDsl.OtherRoot;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class OtherDslPackageImpl extends EPackageImpl implements OtherDslPackage
{
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass otherRootEClass = null;

	/**
	 * Creates an instance of the model <b>Package</b>, registered with
	 * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
	 * package URI value.
	 * <p>Note: the correct way to create the package is via the static
	 * factory method {@link #init init()}, which also performs
	 * initialization of the package, or returns the registered package,
	 * if one already exists.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.emf.ecore.EPackage.Registry
	 * @see org.xtext.example.mydsl4test.otherDsl.OtherDslPackage#eNS_URI
	 * @see #init()
	 * @generated
	 */
	private OtherDslPackageImpl()
	{
		super(eNS_URI, OtherDslFactory.eINSTANCE);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private static boolean isInited = false;

	/**
	 * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
	 *
	 * <p>This method is used to initialize {@link OtherDslPackage#eINSTANCE} when that field is accessed.
	 * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #eNS_URI
	 * @see #createPackageContents()
	 * @see #initializePackageContents()
	 * @generated
	 */
	public static OtherDslPackage init()
	{
		if (isInited) return (OtherDslPackage)EPackage.Registry.INSTANCE.getEPackage(OtherDslPackage.eNS_URI);

		// Obtain or create and register package
		Object registeredOtherDslPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
		OtherDslPackageImpl theOtherDslPackage = registeredOtherDslPackage instanceof OtherDslPackageImpl ? (OtherDslPackageImpl)registeredOtherDslPackage : new OtherDslPackageImpl();

		isInited = true;

		// Obtain or create and register interdependencies
		Object registeredPackage = EPackage.Registry.INSTANCE.getEPackage(MyDslTestPackage.eNS_URI);
		MyDslTestPackageImpl theMyDslTestPackage = (MyDslTestPackageImpl)(registeredPackage instanceof MyDslTestPackageImpl ? registeredPackage : MyDslTestPackage.eINSTANCE);

		// Create package meta-data objects
		theOtherDslPackage.createPackageContents();
		theMyDslTestPackage.createPackageContents();

		// Initialize created meta-data
		theOtherDslPackage.initializePackageContents();
		theMyDslTestPackage.initializePackageContents();

		// Mark meta-data to indicate it can't be changed
		theOtherDslPackage.freeze();

		// Update the registry and return the package
		EPackage.Registry.INSTANCE.put(OtherDslPackage.eNS_URI, theOtherDslPackage);
		return theOtherDslPackage;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EClass getOtherRoot()
	{
		return otherRootEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EReference getOtherRoot_Value()
	{
		return (EReference)otherRootEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public OtherDslFactory getOtherDslFactory()
	{
		return (OtherDslFactory)getEFactoryInstance();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private boolean isCreated = false;

	/**
	 * Creates the meta-model objects for the package.  This method is
	 * guarded to have no affect on any invocation but its first.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void createPackageContents()
	{
		if (isCreated) return;
		isCreated = true;

		// Create classes and their features
		otherRootEClass = createEClass(OTHER_ROOT);
		createEReference(otherRootEClass, OTHER_ROOT__VALUE);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private boolean isInitialized = false;

	/**
	 * Complete the initialization of the package and its meta-model.  This
	 * method is guarded to have no affect on any invocation but its first.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void initializePackageContents()
	{
		if (isInitialized) return;
		isInitialized = true;

		// Initialize package
		setName(eNAME);
		setNsPrefix(eNS_PREFIX);
		setNsURI(eNS_URI);

		// Obtain other dependent packages
		MyDslTestPackage theMyDslTestPackage = (MyDslTestPackage)EPackage.Registry.INSTANCE.getEPackage(MyDslTestPackage.eNS_URI);

		// Create type parameters

		// Set bounds for type parameters

		// Add supertypes to classes

		// Initialize classes and features; add operations and parameters
		initEClass(otherRootEClass, OtherRoot.class, "OtherRoot", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getOtherRoot_Value(), theMyDslTestPackage.getModel(), null, "value", null, 0, 1, OtherRoot.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		// Create resource
		createResource(eNS_URI);
	}

} //OtherDslPackageImpl
